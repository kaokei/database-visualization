// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

// 应用
model App {
    id           Int        @id @default(autoincrement())
    name         String     @unique
    desc         String
    databaseList Database[]
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @default(now())
}

// 服务器
model Server {
    id           Int        @id @default(autoincrement())
    name         String     @unique
    desc         String
    host         String
    port         String
    username     String
    password     String
    databaseList Database[]
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @default(now())
}

// 数据库
model Database {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    server    Server?  @relation(fields: [serverId], references: [id])
    serverId  Int?
    appList   App[]
    tableList Table[]
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

// 表
model Table {
    id         Int       @id @default(autoincrement())
    name       String    @unique
    database   Database? @relation(fields: [databaseId], references: [id])
    databaseId Int?
    fieldList  Field[]
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @default(now())
}

// 字段
model Field {
    id             Int             @id @default(autoincrement())
    name           String          @unique
    table          Table?          @relation(fields: [tableId], references: [id])
    tableId        Int?
    startFieldList FieldRelation[] @relation("start")
    endFieldList   FieldRelation[] @relation("end")
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @default(now())
}

// 字段间关系
model FieldRelation {
    startFieldId Int
    startField   Field    @relation("start", fields: [startFieldId], references: [id])
    endFieldId   Int
    endField     Field    @relation("end", fields: [endFieldId], references: [id])
    relation     Int      @default(0)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @default(now())

    @@id([startFieldId, endFieldId])
}
